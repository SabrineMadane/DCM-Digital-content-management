package com.myapp.sabrine.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HRAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHRAllPropertiesEquals(HR expected, HR actual) {
        assertHRAutoGeneratedPropertiesEquals(expected, actual);
        assertHRAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHRAllUpdatablePropertiesEquals(HR expected, HR actual) {
        assertHRUpdatableFieldsEquals(expected, actual);
        assertHRUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHRAutoGeneratedPropertiesEquals(HR expected, HR actual) {
        assertThat(expected)
            .as("Verify HR auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHRUpdatableFieldsEquals(HR expected, HR actual) {
        assertThat(expected)
            .as("Verify HR relevant properties")
            .satisfies(e -> assertThat(e.getNom()).as("check nom").isEqualTo(actual.getNom()))
            .satisfies(e -> assertThat(e.getPrenom()).as("check prenom").isEqualTo(actual.getPrenom()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHRUpdatableRelationshipsEquals(HR expected, HR actual) {
        assertThat(expected)
            .as("Verify HR relationships")
            .satisfies(e -> assertThat(e.getEntreprise()).as("check entreprise").isEqualTo(actual.getEntreprise()));
    }
}
