package com.myapp.sabrine.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EntrepriseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseAllPropertiesEquals(Entreprise expected, Entreprise actual) {
        assertEntrepriseAutoGeneratedPropertiesEquals(expected, actual);
        assertEntrepriseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseAllUpdatablePropertiesEquals(Entreprise expected, Entreprise actual) {
        assertEntrepriseUpdatableFieldsEquals(expected, actual);
        assertEntrepriseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseAutoGeneratedPropertiesEquals(Entreprise expected, Entreprise actual) {
        assertThat(expected)
            .as("Verify Entreprise auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseUpdatableFieldsEquals(Entreprise expected, Entreprise actual) {
        assertThat(expected)
            .as("Verify Entreprise relevant properties")
            .satisfies(e -> assertThat(e.getSecteur()).as("check secteur").isEqualTo(actual.getSecteur()))
            .satisfies(e -> assertThat(e.getPresenceAuMaroc()).as("check presenceAuMaroc").isEqualTo(actual.getPresenceAuMaroc()))
            .satisfies(e -> assertThat(e.getFocus()).as("check focus").isEqualTo(actual.getFocus()))
            .satisfies(e -> assertThat(e.getLogo()).as("check logo").isEqualTo(actual.getLogo()))
            .satisfies(e -> assertThat(e.getProfilLinkedIn()).as("check profilLinkedIn").isEqualTo(actual.getProfilLinkedIn()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseUpdatableRelationshipsEquals(Entreprise expected, Entreprise actual) {
        assertThat(expected)
            .as("Verify Entreprise relationships")
            .satisfies(e -> assertThat(e.getUtilisateurs()).as("check utilisateurs").isEqualTo(actual.getUtilisateurs()));
    }
}
